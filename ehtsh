#!/bin/bash

# MIT License

# Copyright (C) 2019, Entynetproject. All Rights Reserved.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

if [[ "$1" = "--update" || "$1" = "-u" ]]
then
sleep 1
echo -e "\033[34mInstalling update...\033[0m"
{
cd /etc
rm -r /etc/ehtsh
rm /bin/ehtsh
rm /usr/local/bin/ehtsh
git clone https://github.com/entynetproject/ehtsh.git
cd 
chmod +x install.sh
./install.sh
} &> /dev/null
echo -e "\033[32mSuccessfully updated...\033[0m"
sleep 1
exit

elif [[ "$1" = "--help" || "$1" = "-h" ]]
then
      echo -e "\033[1;37mEhtools Shell - simple ehtools shell.\033[0m"
      echo -e "\033[1;37mCopyright (C) 2019, Entynetproject.\033[0m"
      echo -e
      echo -e "\033[0m    -t  --theme <theme> \033[1;37m| \033[0mChange ehtsh theme.\033[0m"
      echo -e "\033[0m    -u  --update        \033[1;37m| \033[0mUpdate ehtools shell.\033[0m"
      echo -e "\033[0m    -c  --check-if-root \033[1;37m| \033[0mCheck if user root.\033[0m"
      echo -e "\033[0m    -h  --help          \033[1;37m| \033[0mGive this help list.\033[0m"
      echo -e
      echo -e "\033[0m    -t -l --theme --list \033[1;37m| \033[0mShow all available themes.\033[0m"
      echo -e "\033[0m    -t -c --theme --calc \033[1;37m| \033[0mCalculate number of themes.\033[0m"
      echo -e
      exit

elif [[ "$1" = "--check-if-root" || "$1" = "-c" ]]
then
WHO="$( whoami )"
if [[ "$WHO" = "root" ]]
then
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
sleep 3
echo -e ""$N"["$G"✔"$N"] "$G"Congratulations, you are a root!"$C""
sleep 1 
exit
else
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
sleep 3
echo -e ""$N"["$R"✗"$N"] "$R"Sorry, you are not a root!"$C""
sleep 1
exit
fi
fi

echo -e "\033[1;37mEhtools Shell - simple ehtools shell.\033[0m"
echo -e "\033[1;37mCopyright (C) 2019, Entynetproject.\033[0m"
  
WHO="$( whoami )"
PWD="$( pwd )"
  if [[ "$1" = "--theme" || "$1" = "-t" ]]
  then
      if [[ "$2" = "ehtsh" ]]
      then
          while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$WHO'@ehtools:'$PWD'#\a'
    echo -n -e "\033[1;31m"$WHO"@ehtools\033[1;37m:\033[1;34m"$PWD"\033[1;37m#\033[0m"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "system" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$WHO'@ehtools:'$PWD'#\a'
    echo -n -e "as system:"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "eterm" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;eterm ~> '$PWD'\a'
    echo -n -e "\033[34meterm##$:"$PWD":\033[0m"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "root" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;user:root in '$PWD'\a'
    if [[ "$WHO" = "root" ]]
    then
    echo -n -e ""$N"["$G"✔"$N"]-\033[1;37m[\033[1;31mroot\033[1;37m]:\033[0m"
    else
    echo -n -e ""$N"["$R"✗"$N"]-\033[1;37m[\033[1;31mroot\033[1;37m]:\033[0m"
    fi
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "kali" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$WHO'@kali:'$PWD'#\a'
    echo -n -e "\033[1;31m"$WHO"@kali\033[1;37m:\033[1;34m"$PWD"\033[1;37m#\033[0m"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "parrot" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$PWD'\a'
    echo -n -e "\[\033[0;31m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;96m\]\h'; else echo '\[\033[0;39m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h'; fi)\[\033[0;31m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "dos_fat" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;DOS_fat ~> '$PWD'\a'
    echo -n -e "DOS_fat ~> "$PWD":"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
    
    elif [[ "$2" = "entynet" ]]
      then
      clear
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        S="\033[1;35m"
        C="\033[0m" #End
      echo -e ""$S"███████╗███╗   ██╗████████╗██╗   ██╗███╗   ██╗███████╗████████╗"
      echo -e ""$S"██╔════╝████╗  ██║╚══██╔══╝╚██╗ ██╔╝████╗  ██║██╔════╝╚══██╔══╝"
      echo -e ""$S"█████╗  ██╔██╗ ██║   ██║    ╚████╔╝ ██╔██╗ ██║█████╗     ██║   "
      echo -e ""$S"██╔══╝  ██║╚██╗██║   ██║     ╚██╔╝  ██║╚██╗██║██╔══╝     ██║   "
      echo -e ""$S"███████╗██║ ╚████║   ██║      ██║   ██║ ╚████║███████╗   ██║   "
      echo -e ""$S"╚══════╝╚═╝  ╚═══╝   ╚═╝      ╚═╝   ╚═╝  ╚═══╝╚══════╝   ╚═╝   "
      echo -e ""$N"        "$S"***"$N" Welcome to Entynet | Version 2.0 (full) "$S"***"$N"        "
      echo -e ""$N"              "$S"***"$N" Powered by Entynetproject "$S"***"$N"                  "
      echo -e
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        S="\033[1;35m"
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;[461] Connection: Spoofed | Control Panel | Connected As -> '$WHO'\a'
    
    if [[ "$WHO" = "root" ]]
    then
    echo -n -e ""$S"["$WHO""$N"@"$S"entynet "$N""$PWD""$S"]"$N"#"
    read -p $' ' EXEC
    else
    echo -n -e ""$S"["$WHO""$N"@"$S"entynet "$N""$PWD""$S"]"$N"$"
    read -p $' ' EXEC
    fi

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
         
      elif [[ "$2" = "c_disk" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;C:\'$PWD'\a'
    echo -n -e "C:\'$PWD'>"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
elif [[ "$2" = "alpine" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;alpine('$PWD')\a'
    echo -n -e ""$R"alpine"$N"(\033[4;31m"$PWD""$C""$N")"$B" ~"$R">"$C""
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
        
      elif [[ "$2" = "--list" || "$2" = "-l" ]]
      then
      echo -e
      echo -e "\033[0m    ehtsh   \033[1;37m| \033[0mThe ehtsh default theme.\033[0m"
      echo -e "\033[0m    system  \033[1;37m| \033[0mOld terminal theme.\033[0m"
      echo -e "\033[0m    eterm   \033[1;37m| \033[0mElliot terminal theme.\033[0m"
      echo -e "\033[0m    root    \033[1;37m| \033[0mFake root user theme.\033[0m"
      echo -e "\033[0m    kali    \033[1;37m| \033[0mKali Linux theme.\033[0m"
      echo -e "\033[0m    parrot  \033[1;37m| \033[0mParrot OS theme.\033[0m"
      echo -e "\033[0m    dos_fat \033[1;37m| \033[0mDOS cmd theme.\033[0m"
      echo -e "\033[0m    c_disk  \033[1;37m| \033[0mWindows cmd theme.\033[0m"
      echo -e "\033[0m    alpine  \033[1;37m| \033[0mMacOS alpine theme.\033[0m"
      echo -e "\033[0m    entynet \033[1;37m| \033[0mEntynet panel theme.\033[0m"
      echo -e
      
      elif [[ "$2" = "--calc" || "$2" = "-c" ]]
      then
      echo -e
      function ProgressBarks {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rCalculating (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.1
    ProgressBarks ${number} ${_end}
done

sleep 3
echo -e
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
        echo -e
echo -e "    Total "$N"|"$C" 10"$C""
echo -e "    v1.0  "$N"|"$C"  8"$C""
echo -e "    v1.2  "$N"|"$C"  9"$C""
echo -e "    v1.3  "$N"|"$C" 10"$C""
echo -e
sleep 1
      fi
     
else
 while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;ehtsh\a'
    if [[ "$WHO" = "root" ]]
    then
    echo -n -e "ehtsh-1.3#"
    else
    echo -n -e "ehtsh-1.3$"
    fi
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ true ]]
        then    
            {
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        else
            {
            
            echo "$EXEC" >> ~/.ehtsh_history
            } &> /dev/null
        fi
    
    done
fi
   
