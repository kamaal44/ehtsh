#!/bin/bash

# MIT License

# Copyright (C) 2019, Entynetproject. All Rights Reserved.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

if [[ "$1" = "--update" ]]
then
echo -e "\033[1;34mInstalling update...\033[0m"
{
cd
rm -r ehtools-shell
rm /bin/ehtsh
rm /usr/local/bin/ehtsh
git clone https://github.com/entynetproject/ehtools-shell.git
cd ehtools-shell
chmod +x install.sh
./install.sh
} &> /dev/null
echo -e "\033[1;32mSuccessfully updated...\033[0m"
sleep 1
exit

elif [[ "$1" = "--check-if-root" ]]
then
WHO="$( whoami )"
if [[ "$WHO" = "root" ]]
then
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
sleep 3
echo -e ""$N"["$G"✔"$N"] "$G"Congratulations, you are a root!"$C""
sleep 1 
exit
else
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
sleep 3
echo -e ""$N"["$R"✗"$N"] "$R"Sorry, you are not a root!"$C""
sleep 1
exit
fi
fi

echo -e "\033[1;37mEhtools Shell - simple ehtools shell.\033[0m"
echo -e "\033[1;37mCopyright (C) 2019 Entynetproject <Ivan Nikolsky>\033[0m"
  
WHO="$( whoami )"
PWD="$( pwd )"
  if [[ "$1" = "--theme" ]]
  then
      if [[ "$2" = "ehtsh" ]]
      then
          while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$WHO'@ehtools:'$PWD'#\a'
    echo -n -e "\033[1;31m"$WHO"@ehtools\033[1;37m:\033[1;34m"$PWD"\033[1;37m#\033[0m"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "system" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$WHO'@ehtools:'$PWD'#\a'
    echo -n -e "as system:"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "eterm" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;eterm ~> '$PWD'\a'
    echo -n -e "\033[34meterm##$:"$PWD":\033[0m"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "root" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;user:root in '$PWD'\a'
    if [[ "$WHO" = "root" ]]
    then
    echo -n -e ""$N"["$G"✔"$N"]-\033[1;37m[\033[1;31mroot\033[1;37m]:\033[0m"
    else
    echo -n -e ""$N"["$R"✗"$N"]-\033[1;37m[\033[1;31mroot\033[1;37m]:\033[0m"
    fi
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "kali" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$WHO'@kali:'$PWD'#\a'
    echo -n -e "\033[1;31m"$WHO"@kali\033[1;37m:\033[1;34m"$PWD"\033[1;37m#\033[0m"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "parrot" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;'$PWD'\a'
    echo -n -e "\[\033[0;31m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ ${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;96m\]\h'; else echo '\[\033[0;39m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h'; fi)\[\033[0;31m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
          
      elif [[ "$2" = "dos_fat" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;DOS_fat ~> '$PWD'\a'
    echo -n -e "DOS_fat ~> "$PWD":"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
         
      elif [[ "$2" = "c_disk" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;C:\'$PWD'\a'
    echo -n -e "C:\'$PWD'>"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
elif [[ "$2" = "alpine" ]]
      then
           while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;alpine('$PWD')\a'
    echo -n -e ""$R"alpine"$N"(\033[4;31m"$PWD""$C""$N")"$B" ~"$R">"$C""
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
        
      elif [[ "$2" = "--list" ]]
      then
      echo -e
      echo -e "\033[1;37m    ehtsh   \033[0m| \033[1;37mehtsh theme\033[0m"
      echo -e "\033[1;37m    system  \033[0m| \033[1;37msystem theme\033[0m"
      echo -e "\033[1;37m    eterm   \033[0m| \033[1;37meterm theme\033[0m"
      echo -e "\033[1;37m    root    \033[0m| \033[1;37mroot theme\033[0m"
      echo -e "\033[1;37m    kali    \033[0m| \033[1;37mkali theme\033[0m"
      echo -e "\033[1;37m    parrot  \033[0m| \033[1;37mparrot theme\033[0m"
      echo -e "\033[1;37m    dos_fat \033[0m| \033[1;37mDOS_fat theme\033[0m"
      echo -e "\033[1;37m    c_disk  \033[0m| \033[1;37mC_disk theme\033[0m"
      echo -e "\033[1;37m    alpine  \033[0m| \033[1;37malpine theme theme\033[0m"
      echo -e
      fi
     
else
 while true
    do
        R="\033[1;31m" # Red
        N="\033[1;37m" # White
        G="\033[1;32m" # Green
        O="\033[1;93m" # Orange
        B="\033[1;34m" #Blue
        C="\033[0m" #End
            WHO="$( whoami )"
            PWD="$( pwd )"
trap '' INT TSTP
trap '' 2
printf '\033]2;ehtsh\a'
    echo -n -e "ehtsh-1.0$"
    read -p $' ' EXEC

if [[ "$EXEC" = "ls" ]]
then
if [[ -d /System/Library/CoreServices/Finder.app ]]
then
ls -G
else
ls --color
fi
else
if [[ "$EXEC" = "cd ~" ]]
then
cd
else
$EXEC
fi
fi
        if [[ -d /eht ]]
        then    
            {
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        else
            {
            mkdir /eht
            echo "$EXEC" >> /eht/.ehtsh_history
            } &> /dev/null
        fi
    
    done
fi
   
